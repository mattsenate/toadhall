#!/usr/bin/env python

import sys, os, threading, socket, time

class Host(threading.Thread):
    def __init__(self, ipaddr):
        threading.Thread.__init__(self)
        self.ipaddr = ipaddr
        self.setDaemon(1)
        self.alive = 0
        self.netbios = 0

    def run(self):
        try:
            s = socket.socket()
            s.connect((self.ipaddr, 139))
        except socket.error, error:
            code, message = error.args
            if code == 111: # connection refused
                sys.stderr.write('%s: alive without netbios\n' % self.ipaddr)
                self.alive = 1
        else:
            sys.stderr.write('%s: alive with netbios\n' % self.ipaddr)
            self.alive = 1
            self.netbios = 1

leases = {}
for line in open('/var/lib/misc/dnsmasq.leases'):
    expiry, mac, ipaddr, name, ident = (line.split() + ['']*5)[:5]
    if ipaddr.startswith('10.') and not name.startswith('dynamic'):
        leases[ipaddr] = name
for line in open('/etc/hosts'):
    ipaddr, name = (line.split() + ['']*2)[:2]
    if ipaddr.startswith('10.') and not name.startswith('dynamic'):
        leases[ipaddr] = name

hosts = [Host(ipaddr) for ipaddr in leases]
for host in hosts:
    host.start()
time.sleep(3)

for host in hosts:
    if host.alive:
        shares = ''
        if host.netbios:
            sys.stderr.write('%s: listing shares\n' % host.ipaddr)
            listing = 0
            for line in os.popen('smbclient -NL %s 2>/dev/null' % host.ipaddr):
                if line.startswith('\tSharename'):
                    listing = 1
                    namestart = line.find('Sharename')
                    typestart = line.find('Type')
                    typeend = line.find('Comment')
                if listing and not line.startswith('\t'):
                    listing = 0
                if listing:
                    name = line[namestart:typestart].strip()
                    type = line[typestart:typeend].strip()
                    if not name.endswith('$') and type == 'Disk':
                        shares += '|' + name
        print host.ipaddr, leases[host.ipaddr] or '?', host.netbios, shares
        sys.stdout.flush()
